from util.util import timing, format_number
from scripts.abstract_problem import Problem


class Problem29(Problem):
    def __init__(self, **kwargs):
        super().__init__()

        if "upper_bound_a" not in kwargs.keys():
            raise ValueError("upper_bound_a not specified")
        if "upper_bound_b" not in kwargs.keys():
            raise ValueError("upper_bound_b not specified")

        self.answer, self.time_taken = self.solve(
            upper_bound_a=kwargs["upper_bound_a"], upper_bound_b=kwargs["upper_bound_b"]
        )

        self.detailed_answer = f"The number of distintcs terms generated by a^b with 2 ≤ a ≤ {format_number(kwargs['upper_bound_a'])} and 2 ≤ b ≤ {format_number(kwargs['upper_bound_b'])} is {format_number(self.answer)}"

    @timing
    def solve(self, upper_bound_a: int, upper_bound_b: int) -> int:
        L = []
        for a in range(2, upper_bound_a + 1):
            for b in range(2, upper_bound_b + 1):
                L.append(a**b)
        list_without_duplicates = list(set(L))
        return len(list_without_duplicates)


if __name__ == "__main__":
    problem = Problem29(upper_bound_a=100, upper_bound_b=100)
    problem.print_problem()
